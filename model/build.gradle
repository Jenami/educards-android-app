apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

apply plugin: 'org.junit.platform.gradle.plugin'

group = 'educards'
version = '0.0.1-SNAPSHOT'

description = 'educards-model'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

check.dependsOn jacocoTestReport


repositories {
     mavenCentral()

     maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    testCompile("org.mockito:mockito-core:1.10.19")
    implementation 'com.squareup.retrofit:retrofit:1.9.0'

    testCompile 'org.assertj:assertj-core:3.9.0'
    testCompile 'io.cucumber:cucumber-java:4.2.0'
    testCompile 'io.cucumber:cucumber-junit:2.4.0'
    testCompile 'junit:junit:4.12'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'

}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}
test {
    finalizedBy jacocoTestReport
}

// Code coverage
jacoco {
    toolVersion = '0.7.9'
    applyTo junitPlatformTest
}

junitPlatformTest {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

